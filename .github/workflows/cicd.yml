name: Deploy gateway

on:
    # Deploys the microservice on push to subfolder gateway on the main branch of this code repository.
    push:
        branches:
            - main
            - workflow
        paths:
            - "MeetingService" # Only trigger on push to gateway subfolder.

    # Allows workflow to be invoked manually through the GitHub Actions user interface.
    workflow_dispatch:

jobs:
    gateway:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: '.' # Sets default path for "run" commands to the gateway subfolder.

        # Sets environment variables with values extracted from GitHub Actions Repository Secrets.
        env:
            VERSION: ${{ github.sha }}
            CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
            CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
            CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

        steps:
            # Checks-out repository under $GITHUB_WORKSPACE.
            - uses: actions/checkout@v4

            # Installs Node.js.
            - uses: actions/setup-node@v4
              with:
                  node-version: 19.9.0
                  cache: "npm"
                  cache-dependency-path: "MeetingService/package-lock.json" # Path to package-lock.json in gateway subfolder.

            # Builds the Docker image.
            - name: Build-meeting
              run: docker build -t $CONTAINER_REGISTRY_LOGIN_SERVER/meetingservice:$VERSION --file ./MeetingService/Dockerfile .

            # Publishes the Docker image to the Azure Container Registry.
            - name: Publish-meeting
              run: |
                  echo $CONTAINER_REGISTRY_PASSWORD | docker login $CONTAINER_REGISTRY_LOGIN_SERVER --username $CONTAINER_REGISTRY_USERNAME --password-stdin
                  docker push $CONTAINER_REGISTRY_LOGIN_SERVER/meetingservice:$VERSION
            
            - uses: actions/setup-node@v4
              with:
                  node-version: 19.9.0
                  cache: "npm"
                  cache-dependency-path: "GateWayAPI/package-lock.json" # Path to package-lock.json in gateway subfolder.

            # Builds the Docker image.
            - name: Build-gatway
              run: docker build -t $CONTAINER_REGISTRY_LOGIN_SERVER/gatewayapi:$VERSION --file ./GateWayAPI/Dockerfile .

            # Publishes the Docker image to the Azure Container Registry.
            - name: Publish-gateway
              run: |
                  echo $CONTAINER_REGISTRY_PASSWORD | docker login $CONTAINER_REGISTRY_LOGIN_SERVER --username $CONTAINER_REGISTRY_USERNAME --password-stdin
                  docker push $CONTAINER_REGISTRY_LOGIN_SERVER/gatewayapi:$VERSION


            # Installs Kubectl and connects it to the Azure Kubernetes Service (AKS) cluster.
            # https://github.com/marketplace/actions/kubernetes-cli-kubectl
            - uses: tale/kubectl-action@v1
              with:
                  base64-kube-config: ${{ secrets.KUBE_CONFIG }}
                  kubectl-version: v1.24.2

            # Expands the manifest YAML file (i.e. replaces placeholders in the YAML file with environment variable values)
            # and deploys the microservice to the Azure Kubernetes Service (AKS) cluster.

            - name: Deploy-gateway
              run: envsubst < ./GateWayAPI\kubernetes\deploy-gateway.yaml | kubectl apply -f -

            - uses: actions/checkout@v4

            - name: Deploy-meeting
              run: envsubst < ./MeetingService\kubernetes\deploy-meeting.yaml | kubectl apply -f -

            - uses: actions/checkout@v4